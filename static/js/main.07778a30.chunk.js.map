{"version":3,"sources":["Counter.tsx","Button.tsx","Buttons.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Counter","current","CurrentClassName","Message","className","Button","ButtonCallBack","name","onClick","Buttons","ButtonReset","changeCurrent","MaxValue","startValue","ButtonCurrentClassName","ButtonResetClassName","App","useState","setCurrent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"oNAkBeA,EAZC,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,QAERC,GAF4C,2BAEZ,IAAZD,EAAD,mBAAuC,SAC1DE,EAAuB,IAAZF,EAAD,UAAqBA,EAArB,iFAAkDA,EAElE,OACI,qBAAKG,UAAWF,EAAhB,SACKC,KCQEE,EAbA,SAAC,GAA6D,IAA5DC,EAA2D,EAA3DA,eAAgBC,EAA2C,EAA3CA,KAAMH,EAAqC,EAArCA,UAAqC,qDAExE,OACI,8BACI,wBAAQA,UAAWA,EACXI,QAASF,EADjB,SAEKC,OCcFE,EAjBC,SAAC,GAAuF,IAAtFC,EAAqF,EAArFA,YAAaC,EAAwE,EAAxEA,cAAeC,EAAyD,EAAzDA,SAAUC,EAA+C,EAA/CA,WAAYZ,EAAmC,EAAnCA,QAE1Da,GAF6F,iFAEnEb,IAAYW,EAAY,mBAAqB,iBACvEG,EAAwBd,GAAWY,EAAa,EAAK,oBAAsB,cAEjF,OACI,sBAAKT,UAAU,UAAf,UACI,cAAC,EAAD,CAAQE,eAAgBK,EAChBP,UAAWU,EACXP,KAAM,2DACd,cAAC,EAAD,CAAQD,eAAgBI,EAChBN,UAAWW,EACXR,KAAM,uCCgBXS,MAjCf,WAEI,IAFW,EAImBC,mBAFH,GAFhB,mBAIJhB,EAJI,KAIKiB,EAJL,KAeX,OACI,qBAAKd,UAAU,MAAf,SACI,sBAAKA,UAAU,YAAf,UACI,cAAC,EAAD,CACIH,QAASA,IAEb,cAAC,EAAD,CACIA,QAASA,EACTU,cAjBM,WAClB,GAAIV,EAJiB,EAKjB,OAAOiB,EAAWjB,EAAU,IAgBpBS,YAbI,WAChBQ,EAVuB,IAuBXN,SAtBS,EAuBTC,WAxBW,UCMhBM,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.07778a30.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ntype CurrentType = {\r\n    current: number\r\n}\r\n\r\nconst Counter = ({current, ...props}: CurrentType) => {\r\n\r\n    const CurrentClassName = (current === 5) ? `table tableBlock` : \"table\"\r\n    const Message = (current === 5) ? `${current} - это мой предел` : current\r\n\r\n    return (\r\n        <div className={CurrentClassName}>\r\n            {Message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Counter;","import React from 'react';\r\n\r\ntype ButtonType = {\r\n    ButtonCallBack: () => void\r\n    className: string\r\n    name: string\r\n}\r\n\r\nconst Button = ({ButtonCallBack, name, className, ...props}: ButtonType) => {\r\n\r\n    return (\r\n        <div>\r\n            <button className={className}\r\n                    onClick={ButtonCallBack}>\r\n                {name}\r\n            </button>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport Button from \"./Button\";\r\n\r\ntype ButtonType = {\r\n    ButtonReset: () => void\r\n    changeCurrent: () => void\r\n    current: number\r\n    MaxValue: number\r\n    startValue: number\r\n}\r\n\r\nconst Buttons = ({ButtonReset, changeCurrent, MaxValue, startValue, current, ...props}: ButtonType) => {\r\n\r\n    const ButtonCurrentClassName = (current === MaxValue) ? \"buttonCurrentMax\" : \"buttonCurrent\"\r\n    const ButtonResetClassName = (current >= startValue + 1) ? \"buttonResetActive\" : \"buttonReset\"\r\n\r\n    return (\r\n        <div className=\"current\">\r\n            <Button ButtonCallBack={changeCurrent}\r\n                    className={ButtonCurrentClassName}\r\n                    name={\"Увеличить\"}/>\r\n            <Button ButtonCallBack={ButtonReset}\r\n                    className={ButtonResetClassName}\r\n                    name={\"Сброс\"}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Buttons;","import React, {useState} from 'react';\nimport './App.css';\n\nimport Counter from \"./Counter\";\nimport Buttons from \"./Buttons\";\n\nfunction App() {\n\n    const startValue: number = 0\n    const MaxValue: number = 5\n    const [current, setCurrent] = useState<number>(startValue)\n\n    const changeCurrent = () => {\n        if (current < MaxValue) {\n            return setCurrent(current + 1);\n        }\n    }\n    const ButtonReset = () => {\n        setCurrent(startValue)\n    }\n\n    return (\n        <div className=\"App\">\n            <div className=\"conteiner\">\n                <Counter\n                    current={current}\n                />\n                <Buttons\n                    current={current}\n                    changeCurrent={changeCurrent}\n                    ButtonReset={ButtonReset}\n                    MaxValue={MaxValue}\n                    startValue={startValue}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}